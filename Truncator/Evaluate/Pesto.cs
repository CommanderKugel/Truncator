
using static Tunables;

public static class Pesto
{

    public static int Evaluate(ref Pos p)
    {
        int eval = 0;
        int phase = 0;

        for (Color stm = Color.White; stm <= Color.Black; stm++)
        {
            for (PieceType pt = PieceType.Pawn; pt <= PieceType.King; pt++)
            {
                ulong pieces = p.GetPieces(stm, pt);

                while (pieces != 0)
                {
                    int sq = Utils.popLsb(ref pieces) ^ ((int)stm * 56);
                    eval += Material[(int)pt]
                         + Psqt[(int)pt * 64 + sq];
                    phase += PhaseValues[(int)pt];
                }
            }

            eval = -eval;
        }

        phase = Math.Min(phase, 24);
        eval = (phase * (short)(eval >> 16) + (24 - phase) * (short)eval) / (p.Us == Color.White ? 24 : -24);

        eval = Scaling.MaterialScaling(ref p, eval);
        return eval;
    }


    private static ReadOnlySpan<int> PhaseValues => [
        0, 1, 1, 2, 4, 0
    ];

    private static int S(int mg, int eg) => (mg << 16) + eg;

    private static readonly int[] Material = {
        S(82, 94), S(337, 281), S(365, 297), S(477, 512), S(1025, 936), S(20_000, 20_000)
    };

    private static readonly int[] Psqt = [
        S(0, 0),
        S(0, 0),
        S(0, 0),
        S(0, 0),
        S(0, 0),
        S(0, 0),
        S(0, 0),
        S(0, 0),
        S(P_a2_mg, P_a2_eg),
        S(P_b2_mg, P_b2_eg),
        S(P_c2_mg, P_c2_eg),
        S(P_d2_mg, P_d2_eg),
        S(P_e2_mg, P_e2_eg),
        S(P_f2_mg, P_f2_eg),
        S(P_g2_mg, P_g2_eg),
        S(P_h2_mg, P_h2_eg),
        S(P_a3_mg, P_a3_eg),
        S(P_b3_mg, P_b3_eg),
        S(P_c3_mg, P_c3_eg),
        S(P_d3_mg, P_d3_eg),
        S(P_e3_mg, P_e3_eg),
        S(P_f3_mg, P_f3_eg),
        S(P_g3_mg, P_g3_eg),
        S(P_h3_mg, P_h3_eg),
        S(P_a4_mg, P_a4_eg),
        S(P_b4_mg, P_b4_eg),
        S(P_c4_mg, P_c4_eg),
        S(P_d4_mg, P_d4_eg),
        S(P_e4_mg, P_e4_eg),
        S(P_f4_mg, P_f4_eg),
        S(P_g4_mg, P_g4_eg),
        S(P_h4_mg, P_h4_eg),
        S(P_a5_mg, P_a5_eg),
        S(P_b5_mg, P_b5_eg),
        S(P_c5_mg, P_c5_eg),
        S(P_d5_mg, P_d5_eg),
        S(P_e5_mg, P_e5_eg),
        S(P_f5_mg, P_f5_eg),
        S(P_g5_mg, P_g5_eg),
        S(P_h5_mg, P_h5_eg),
        S(P_a6_mg, P_a6_eg),
        S(P_b6_mg, P_b6_eg),
        S(P_c6_mg, P_c6_eg),
        S(P_d6_mg, P_d6_eg),
        S(P_e6_mg, P_e6_eg),
        S(P_f6_mg, P_f6_eg),
        S(P_g6_mg, P_g6_eg),
        S(P_h6_mg, P_h6_eg),
        S(P_a7_mg, P_a7_eg),
        S(P_b7_mg, P_b7_eg),
        S(P_c7_mg, P_c7_eg),
        S(P_d7_mg, P_d7_eg),
        S(P_e7_mg, P_e7_eg),
        S(P_f7_mg, P_f7_eg),
        S(P_g7_mg, P_g7_eg),
        S(P_h7_mg, P_h7_eg),
        S(0, 0),
        S(0, 0),
        S(0, 0),
        S(0, 0),
        S(0, 0),
        S(0, 0),
        S(0, 0),
        S(0, 0),

        S(N_a1_mg, N_a1_eg),
        S(N_b1_mg, N_b1_eg),
        S(N_c1_mg, N_c1_eg),
        S(N_d1_mg, N_d1_eg),
        S(N_e1_mg, N_e1_eg),
        S(N_f1_mg, N_f1_eg),
        S(N_g1_mg, N_g1_eg),
        S(N_h1_mg, N_h1_eg),
        S(N_a2_mg, N_a2_eg),
        S(N_b2_mg, N_b2_eg),
        S(N_c2_mg, N_c2_eg),
        S(N_d2_mg, N_d2_eg),
        S(N_e2_mg, N_e2_eg),
        S(N_f2_mg, N_f2_eg),
        S(N_g2_mg, N_g2_eg),
        S(N_h2_mg, N_h2_eg),
        S(N_a3_mg, N_a3_eg),
        S(N_b3_mg, N_b3_eg),
        S(N_c3_mg, N_c3_eg),
        S(N_d3_mg, N_d3_eg),
        S(N_e3_mg, N_e3_eg),
        S(N_f3_mg, N_f3_eg),
        S(N_g3_mg, N_g3_eg),
        S(N_h3_mg, N_h3_eg),
        S(N_a4_mg, N_a4_eg),
        S(N_b4_mg, N_b4_eg),
        S(N_c4_mg, N_c4_eg),
        S(N_d4_mg, N_d4_eg),
        S(N_e4_mg, N_e4_eg),
        S(N_f4_mg, N_f4_eg),
        S(N_g4_mg, N_g4_eg),
        S(N_h4_mg, N_h4_eg),
        S(N_a5_mg, N_a5_eg),
        S(N_b5_mg, N_b5_eg),
        S(N_c5_mg, N_c5_eg),
        S(N_d5_mg, N_d5_eg),
        S(N_e5_mg, N_e5_eg),
        S(N_f5_mg, N_f5_eg),
        S(N_g5_mg, N_g5_eg),
        S(N_h5_mg, N_h5_eg),
        S(N_a6_mg, N_a6_eg),
        S(N_b6_mg, N_b6_eg),
        S(N_c6_mg, N_c6_eg),
        S(N_d6_mg, N_d6_eg),
        S(N_e6_mg, N_e6_eg),
        S(N_f6_mg, N_f6_eg),
        S(N_g6_mg, N_g6_eg),
        S(N_h6_mg, N_h6_eg),
        S(N_a7_mg, N_a7_eg),
        S(N_b7_mg, N_b7_eg),
        S(N_c7_mg, N_c7_eg),
        S(N_d7_mg, N_d7_eg),
        S(N_e7_mg, N_e7_eg),
        S(N_f7_mg, N_f7_eg),
        S(N_g7_mg, N_g7_eg),
        S(N_h7_mg, N_h7_eg),
        S(N_a8_mg, N_a8_eg),
        S(N_b8_mg, N_b8_eg),
        S(N_c8_mg, N_c8_eg),
        S(N_d8_mg, N_d8_eg),
        S(N_e8_mg, N_e8_eg),
        S(N_f8_mg, N_f8_eg),
        S(N_g8_mg, N_g8_eg),
        S(N_h8_mg, N_h8_eg),

        S(B_a1_mg, B_a1_eg),
        S(B_b1_mg, B_b1_eg),
        S(B_c1_mg, B_c1_eg),
        S(B_d1_mg, B_d1_eg),
        S(B_e1_mg, B_e1_eg),
        S(B_f1_mg, B_f1_eg),
        S(B_g1_mg, B_g1_eg),
        S(B_h1_mg, B_h1_eg),
        S(B_a2_mg, B_a2_eg),
        S(B_b2_mg, B_b2_eg),
        S(B_c2_mg, B_c2_eg),
        S(B_d2_mg, B_d2_eg),
        S(B_e2_mg, B_e2_eg),
        S(B_f2_mg, B_f2_eg),
        S(B_g2_mg, B_g2_eg),
        S(B_h2_mg, B_h2_eg),
        S(B_a3_mg, B_a3_eg),
        S(B_b3_mg, B_b3_eg),
        S(B_c3_mg, B_c3_eg),
        S(B_d3_mg, B_d3_eg),
        S(B_e3_mg, B_e3_eg),
        S(B_f3_mg, B_f3_eg),
        S(B_g3_mg, B_g3_eg),
        S(B_h3_mg, B_h3_eg),
        S(B_a4_mg, B_a4_eg),
        S(B_b4_mg, B_b4_eg),
        S(B_c4_mg, B_c4_eg),
        S(B_d4_mg, B_d4_eg),
        S(B_e4_mg, B_e4_eg),
        S(B_f4_mg, B_f4_eg),
        S(B_g4_mg, B_g4_eg),
        S(B_h4_mg, B_h4_eg),
        S(B_a5_mg, B_a5_eg),
        S(B_b5_mg, B_b5_eg),
        S(B_c5_mg, B_c5_eg),
        S(B_d5_mg, B_d5_eg),
        S(B_e5_mg, B_e5_eg),
        S(B_f5_mg, B_f5_eg),
        S(B_g5_mg, B_g5_eg),
        S(B_h5_mg, B_h5_eg),
        S(B_a6_mg, B_a6_eg),
        S(B_b6_mg, B_b6_eg),
        S(B_c6_mg, B_c6_eg),
        S(B_d6_mg, B_d6_eg),
        S(B_e6_mg, B_e6_eg),
        S(B_f6_mg, B_f6_eg),
        S(B_g6_mg, B_g6_eg),
        S(B_h6_mg, B_h6_eg),
        S(B_a7_mg, B_a7_eg),
        S(B_b7_mg, B_b7_eg),
        S(B_c7_mg, B_c7_eg),
        S(B_d7_mg, B_d7_eg),
        S(B_e7_mg, B_e7_eg),
        S(B_f7_mg, B_f7_eg),
        S(B_g7_mg, B_g7_eg),
        S(B_h7_mg, B_h7_eg),
        S(B_a8_mg, B_a8_eg),
        S(B_b8_mg, B_b8_eg),
        S(B_c8_mg, B_c8_eg),
        S(B_d8_mg, B_d8_eg),
        S(B_e8_mg, B_e8_eg),
        S(B_f8_mg, B_f8_eg),
        S(B_g8_mg, B_g8_eg),
        S(B_h8_mg, B_h8_eg),

        S(R_a1_mg, R_a1_eg),
        S(R_b1_mg, R_b1_eg),
        S(R_c1_mg, R_c1_eg),
        S(R_d1_mg, R_d1_eg),
        S(R_e1_mg, R_e1_eg),
        S(R_f1_mg, R_f1_eg),
        S(R_g1_mg, R_g1_eg),
        S(R_h1_mg, R_h1_eg),
        S(R_a2_mg, R_a2_eg),
        S(R_b2_mg, R_b2_eg),
        S(R_c2_mg, R_c2_eg),
        S(R_d2_mg, R_d2_eg),
        S(R_e2_mg, R_e2_eg),
        S(R_f2_mg, R_f2_eg),
        S(R_g2_mg, R_g2_eg),
        S(R_h2_mg, R_h2_eg),
        S(R_a3_mg, R_a3_eg),
        S(R_b3_mg, R_b3_eg),
        S(R_c3_mg, R_c3_eg),
        S(R_d3_mg, R_d3_eg),
        S(R_e3_mg, R_e3_eg),
        S(R_f3_mg, R_f3_eg),
        S(R_g3_mg, R_g3_eg),
        S(R_h3_mg, R_h3_eg),
        S(R_a4_mg, R_a4_eg),
        S(R_b4_mg, R_b4_eg),
        S(R_c4_mg, R_c4_eg),
        S(R_d4_mg, R_d4_eg),
        S(R_e4_mg, R_e4_eg),
        S(R_f4_mg, R_f4_eg),
        S(R_g4_mg, R_g4_eg),
        S(R_h4_mg, R_h4_eg),
        S(R_a5_mg, R_a5_eg),
        S(R_b5_mg, R_b5_eg),
        S(R_c5_mg, R_c5_eg),
        S(R_d5_mg, R_d5_eg),
        S(R_e5_mg, R_e5_eg),
        S(R_f5_mg, R_f5_eg),
        S(R_g5_mg, R_g5_eg),
        S(R_h5_mg, R_h5_eg),
        S(R_a6_mg, R_a6_eg),
        S(R_b6_mg, R_b6_eg),
        S(R_c6_mg, R_c6_eg),
        S(R_d6_mg, R_d6_eg),
        S(R_e6_mg, R_e6_eg),
        S(R_f6_mg, R_f6_eg),
        S(R_g6_mg, R_g6_eg),
        S(R_h6_mg, R_h6_eg),
        S(R_a7_mg, R_a7_eg),
        S(R_b7_mg, R_b7_eg),
        S(R_c7_mg, R_c7_eg),
        S(R_d7_mg, R_d7_eg),
        S(R_e7_mg, R_e7_eg),
        S(R_f7_mg, R_f7_eg),
        S(R_g7_mg, R_g7_eg),
        S(R_h7_mg, R_h7_eg),
        S(R_a8_mg, R_a8_eg),
        S(R_b8_mg, R_b8_eg),
        S(R_c8_mg, R_c8_eg),
        S(R_d8_mg, R_d8_eg),
        S(R_e8_mg, R_e8_eg),
        S(R_f8_mg, R_f8_eg),
        S(R_g8_mg, R_g8_eg),
        S(R_h8_mg, R_h8_eg),

        S(Q_a1_mg, Q_a1_eg),
        S(Q_b1_mg, Q_b1_eg),
        S(Q_c1_mg, Q_c1_eg),
        S(Q_d1_mg, Q_d1_eg),
        S(Q_e1_mg, Q_e1_eg),
        S(Q_f1_mg, Q_f1_eg),
        S(Q_g1_mg, Q_g1_eg),
        S(Q_h1_mg, Q_h1_eg),
        S(Q_a2_mg, Q_a2_eg),
        S(Q_b2_mg, Q_b2_eg),
        S(Q_c2_mg, Q_c2_eg),
        S(Q_d2_mg, Q_d2_eg),
        S(Q_e2_mg, Q_e2_eg),
        S(Q_f2_mg, Q_f2_eg),
        S(Q_g2_mg, Q_g2_eg),
        S(Q_h2_mg, Q_h2_eg),
        S(Q_a3_mg, Q_a3_eg),
        S(Q_b3_mg, Q_b3_eg),
        S(Q_c3_mg, Q_c3_eg),
        S(Q_d3_mg, Q_d3_eg),
        S(Q_e3_mg, Q_e3_eg),
        S(Q_f3_mg, Q_f3_eg),
        S(Q_g3_mg, Q_g3_eg),
        S(Q_h3_mg, Q_h3_eg),
        S(Q_a4_mg, Q_a4_eg),
        S(Q_b4_mg, Q_b4_eg),
        S(Q_c4_mg, Q_c4_eg),
        S(Q_d4_mg, Q_d4_eg),
        S(Q_e4_mg, Q_e4_eg),
        S(Q_f4_mg, Q_f4_eg),
        S(Q_g4_mg, Q_g4_eg),
        S(Q_h4_mg, Q_h4_eg),
        S(Q_a5_mg, Q_a5_eg),
        S(Q_b5_mg, Q_b5_eg),
        S(Q_c5_mg, Q_c5_eg),
        S(Q_d5_mg, Q_d5_eg),
        S(Q_e5_mg, Q_e5_eg),
        S(Q_f5_mg, Q_f5_eg),
        S(Q_g5_mg, Q_g5_eg),
        S(Q_h5_mg, Q_h5_eg),
        S(Q_a6_mg, Q_a6_eg),
        S(Q_b6_mg, Q_b6_eg),
        S(Q_c6_mg, Q_c6_eg),
        S(Q_d6_mg, Q_d6_eg),
        S(Q_e6_mg, Q_e6_eg),
        S(Q_f6_mg, Q_f6_eg),
        S(Q_g6_mg, Q_g6_eg),
        S(Q_h6_mg, Q_h6_eg),
        S(Q_a7_mg, Q_a7_eg),
        S(Q_b7_mg, Q_b7_eg),
        S(Q_c7_mg, Q_c7_eg),
        S(Q_d7_mg, Q_d7_eg),
        S(Q_e7_mg, Q_e7_eg),
        S(Q_f7_mg, Q_f7_eg),
        S(Q_g7_mg, Q_g7_eg),
        S(Q_h7_mg, Q_h7_eg),
        S(Q_a8_mg, Q_a8_eg),
        S(Q_b8_mg, Q_b8_eg),
        S(Q_c8_mg, Q_c8_eg),
        S(Q_d8_mg, Q_d8_eg),
        S(Q_e8_mg, Q_e8_eg),
        S(Q_f8_mg, Q_f8_eg),
        S(Q_g8_mg, Q_g8_eg),
        S(Q_h8_mg, Q_h8_eg),
        
        S(K_a1_mg, K_a1_eg),
        S(K_b1_mg, K_b1_eg),
        S(K_c1_mg, K_c1_eg),
        S(K_d1_mg, K_d1_eg),
        S(K_e1_mg, K_e1_eg),
        S(K_f1_mg, K_f1_eg),
        S(K_g1_mg, K_g1_eg),
        S(K_h1_mg, K_h1_eg),
        S(K_a2_mg, K_a2_eg),
        S(K_b2_mg, K_b2_eg),
        S(K_c2_mg, K_c2_eg),
        S(K_d2_mg, K_d2_eg),
        S(K_e2_mg, K_e2_eg),
        S(K_f2_mg, K_f2_eg),
        S(K_g2_mg, K_g2_eg),
        S(K_h2_mg, K_h2_eg),
        S(K_a3_mg, K_a3_eg),
        S(K_b3_mg, K_b3_eg),
        S(K_c3_mg, K_c3_eg),
        S(K_d3_mg, K_d3_eg),
        S(K_e3_mg, K_e3_eg),
        S(K_f3_mg, K_f3_eg),
        S(K_g3_mg, K_g3_eg),
        S(K_h3_mg, K_h3_eg),
        S(K_a4_mg, K_a4_eg),
        S(K_b4_mg, K_b4_eg),
        S(K_c4_mg, K_c4_eg),
        S(K_d4_mg, K_d4_eg),
        S(K_e4_mg, K_e4_eg),
        S(K_f4_mg, K_f4_eg),
        S(K_g4_mg, K_g4_eg),
        S(K_h4_mg, K_h4_eg),
        S(K_a5_mg, K_a5_eg),
        S(K_b5_mg, K_b5_eg),
        S(K_c5_mg, K_c5_eg),
        S(K_d5_mg, K_d5_eg),
        S(K_e5_mg, K_e5_eg),
        S(K_f5_mg, K_f5_eg),
        S(K_g5_mg, K_g5_eg),
        S(K_h5_mg, K_h5_eg),
        S(K_a6_mg, K_a6_eg),
        S(K_b6_mg, K_b6_eg),
        S(K_c6_mg, K_c6_eg),
        S(K_d6_mg, K_d6_eg),
        S(K_e6_mg, K_e6_eg),
        S(K_f6_mg, K_f6_eg),
        S(K_g6_mg, K_g6_eg),
        S(K_h6_mg, K_h6_eg),
        S(K_a7_mg, K_a7_eg),
        S(K_b7_mg, K_b7_eg),
        S(K_c7_mg, K_c7_eg),
        S(K_d7_mg, K_d7_eg),
        S(K_e7_mg, K_e7_eg),
        S(K_f7_mg, K_f7_eg),
        S(K_g7_mg, K_g7_eg),
        S(K_h7_mg, K_h7_eg),
        S(K_a8_mg, K_a8_eg),
        S(K_b8_mg, K_b8_eg),
        S(K_c8_mg, K_c8_eg),
        S(K_d8_mg, K_d8_eg),
        S(K_e8_mg, K_e8_eg),
        S(K_f8_mg, K_f8_eg),
        S(K_g8_mg, K_g8_eg),
        S(K_h8_mg, K_h8_eg),
    ];
}
